import numpy as np
import matplotlib.pyplot as plt


DATA_SIZE = str(input('DATA_SIZE:'))
#EXPMT = str(input('EXPMT:'))
#NET_WORK = str(input('NET_WORK:'))
LOSS_FUNCTION = str(input('LOSS_FUNCTION:'))
PREPROCESS = str(input('PREPROCESSING:'))
OPTIMIZER = str(input('OPTIMIZER:'))
NODES = str(input('NODES:'))
#count = str(input('COUNT:'))
#INPUT_DATA = str(input('INPUT_DATA:'))

loss_train_ld = np.load('./'+ DATA_SIZE+'/'+LOSS_FUNCTION+'/'+PREPROCESS+'/'+OPTIMIZER+'/'+NODES+'/loss_train.npy', allow_pickle=True)
loss_valid_ld = np.load('./'  + DATA_SIZE + '/'+LOSS_FUNCTION+'/'+PREPROCESS+'/'+OPTIMIZER+'/'+NODES+'/loss_valid.npy', allow_pickle=True)
node = np.load('./'+ DATA_SIZE +'/'+LOSS_FUNCTION+'/'+PREPROCESS+'/'+OPTIMIZER+'/'+NODES+'/nnode_net2.npy')


'''
for l in range(len(loss_train_ld)):
	length = len(loss_train_ld)
	x_int = int(len(loss_train_ld[l])/7)
	x = np.arange(0,x_int)
	loss_train = np.array(loss_train_ld[l]).reshape(x_int, 7)
	loss_valid = np.array(loss_valid_ld[l]).reshape(x_int, 7)

	fig = plt.figure(figsize=(15.0, 10.0))
	plt.subplot(1,2,1)
	plt.ylim([0.75,1])
	plt.plot(x, loss_train[:,0], label='dro')
	plt.plot(x, loss_train[:,1], label='de')
	plt.plot(x, loss_train[:,2], label='dvx')
	plt.plot(x, loss_train[:,3], label='dvy')
	plt.plot(x, loss_train[:,4], label='dvz')
	plt.plot(x, loss_train[:,5], label='dby')
	plt.plot(x, loss_train[:,6], label='dbz')
	plt.title('loss_score_train')
	plt.xlabel('epoch')
	plt.ylabel('loss_score')
	plt.legend(loc='upper right')

	plt.subplot(1,2,2)
	plt.ylim([0.75,1])
	plt.plot(x, loss_valid[:,0], label='dro')
	plt.plot(x, loss_valid[:,1], label='de')
	plt.plot(x, loss_valid[:,2], label='dvx')
	plt.plot(x, loss_valid[:,3], label='dvy')
	plt.plot(x, loss_valid[:,4], label='dvz')
	plt.plot(x, loss_valid[:,5], label='dby')
	plt.plot(x, loss_valid[:,6], label='dbz')
	plt.title('loss_score_valid')
	plt.xlabel('epoch')
	plt.ylabel('loss_score')
	plt.legend(loc='upper right')
'''

length = len(loss_train_ld)
x_int = int(len(loss_train_ld[0])/7)
x = np.arange(0,x_int)
loss_train = np.array(loss_train_ld[0]).reshape(x_int, 7)
loss_valid = np.array(loss_valid_ld[0]).reshape(x_int, 7)


fig, ax = plt.subplots(2, 4, figsize=(15,6))
ax[0][0].plot(x,loss_train[:,0])
ax[0][0].plot(x,loss_valid[:,0])
ax[0][1].plot(x,loss_train[:,1])
ax[0][1].plot(x,loss_valid[:,1])
ax[0][2].plot(x,loss_train[:,2])
ax[0][2].plot(x,loss_valid[:,2])
ax[0][3].plot(x,loss_train[:,3])
ax[0][3].plot(x,loss_valid[:,3])
ax[1][0].plot(x,loss_train[:,4])
ax[1][0].plot(x,loss_valid[:,4])
ax[1][1].plot(x,loss_train[:,5])
ax[1][1].plot(x,loss_valid[:,5])
ax[1][2].plot(x,loss_train[:,6])
ax[1][2].plot(x,loss_valid[:,6])

ax[0][0].set_xlabel("epoch")
ax[0][0].set_ylabel("loss_score")
ax[0][1].set_xlabel("epoch")
ax[0][1].set_ylabel("loss_score")
ax[0][2].set_xlabel("epoch")
ax[0][2].set_ylabel("loss_score")
ax[0][3].set_xlabel("epoch")
ax[0][3].set_ylabel("Predit")
ax[1][0].set_xlabel("epoch")
ax[1][0].set_ylabel("loss_score")
ax[1][1].set_xlabel("epoch")
ax[1][1].set_ylabel("loss_score")
ax[1][2].set_xlabel("epoch")
ax[1][2].set_ylabel("loss_score")
"""
ax[0][0].set_ylim([0, 0.5])
ax[0][1].set_ylim([0, 0.5])
ax[0][2].set_ylim([0, 0.5])
ax[0][3].set_ylim([0, 0.5])
ax[1][0].set_ylim([0, 0.5])
ax[1][1].set_ylim([0, 0.5])
ax[1][2].set_ylim([0, 0.5])
"""

ax[0][0].set_yscale("log")
ax[0][1].set_yscale("log")
ax[0][2].set_yscale("log")
ax[0][3].set_yscale("log")
ax[1][0].set_yscale("log")
ax[1][1].set_yscale("log")
ax[1][2].set_yscale("log")

ax[0][0].set_title("ro")
ax[0][1].set_title("e")
ax[0][2].set_title("vx")
ax[0][3].set_title("vy")
ax[1][0].set_title("vz")
ax[1][1].set_title("By")
ax[1][2].set_title("Bz")

ax[0][0].legend(['train','valid'], loc='upper right')
ax[0][1].legend(['train','valid'], loc='upper right')
ax[0][2].legend(['train','valid'], loc='upper right')
ax[0][3].legend(['train','valid'], loc='upper right')
ax[1][0].legend(['train','valid'], loc='upper right')
ax[1][1].legend(['train','valid'], loc='upper right')
ax[1][2].legend(['train','valid'], loc='upper right')

ax[1][3].axis("off")

"""
fig = plt.figure(figsize=(15, 6))

ax1 = fig.add_subplot(251, aspect="equal")
ax2 = fig.add_subplot(252, aspect="equal")
ax3 = fig.add_subplot(253, aspect="equal")
ax4 = fig.add_subplot(254, aspect="equal")
ax5 = fig.add_subplot(255, aspect="equal")
ax6 = fig.add_subplot(256, aspect="equal")
ax7 = fig.add_subplot(257, aspect="equal")


ax1.plot(x,loss_train[:,0]*100)
ax1.plot(x,loss_valid[:,0]*100)
ax2.plot(x,loss_train[:,1]*100)
ax2.plot(x,loss_valid[:,1]*100)
ax3.plot(x,loss_train[:,2]*100)
ax3.plot(x,loss_valid[:,2]*100)
ax4.plot(x,loss_train[:,3]*100)
ax4.plot(x,loss_valid[:,3]*100)
ax5.plot(x,loss_train[:,4]*100)
ax5.plot(x,loss_valid[:,4]*100)
ax6.plot(x,loss_train[:,5]*100)
ax6.plot(x,loss_valid[:,5]*100)
ax7.plot(x,loss_train[:,6]*100)
ax7.plot(x,loss_valid[:,6]*100)

ax1.set_xlabel("epoch")
ax1.set_ylabel("loss_score")
ax2.set_xlabel("epoch")
ax2.set_ylabel("loss_score")
ax3.set_xlabel("epoch")
ax3.set_ylabel("loss_score")
ax4.set_xlabel("epoch")
ax4.set_ylabel("Predit")
ax5.set_xlabel("epoch")
ax5.set_ylabel("loss_score")
ax6.set_xlabel("epoch")
ax6.set_ylabel("loss_score")
ax7.set_xlabel("epoch")
ax7.set_ylabel("loss_score")

"""
"""
ax1.set_ylim([0.9, 1.0])
ax2.set_ylim([0.9, 1.0])
ax3.set_ylim([0.9, 1.0])
ax4.set_ylim([0.9, 1.0])
ax5.set_ylim([0.9, 1.0])
ax6.set_ylim([0.9, 1.0])
ax7.set_ylim([0.9, 1.0])
"""
"""
ax1.set_title("ro")
ax2.set_title("e")
ax3.set_title("vx")
ax4.set_title("vy")
ax5.set_title("vz")
ax6.set_title("By")
ax7.set_title("Bz")
"""
plt.tight_layout()
plt.savefig('./'+ DATA_SIZE + '/'+LOSS_FUNCTION+'/'+PREPROCESS+'/'+OPTIMIZER+'/'+NODES+'/loss_score.png')
plt.close()
